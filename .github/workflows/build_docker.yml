name: "Docker build & deploy"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 5"
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest commit SHA
        id: latest_sha
        run: echo "sha=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: lower-repo
        shell: pwsh
        run: echo "repository=$($env:GITHUB_REPOSITORY.ToLowerInvariant())" >> $env:GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{ steps.lower-repo.outputs.repository }}:${{ steps.latest_sha.outputs.sha }},ghcr.io/${{ steps.lower-repo.outputs.repository }}:latest
      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ steps.lower-repo.outputs.repository }}:latest
          format: "table"
          exit-code: "1"
          severity: "HIGH,CRITICAL"
          ignore-unfixed: true
          vuln-type: "os,library"

  discord_notification:
    needs: [docker]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Discord webhook
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: ${{ needs.docker.result == 'success' && 'Caddy Docker image built successfully! :rocket:' || 'Caddy Docker image build failed. :sos:' }}
